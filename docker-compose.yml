services:
  frontend:
    image: lpdswing/mineru-web-frontend:v2.6.2
    ports:
      - "8088:80"
    depends_on:
      - backend
      - minio
    networks:
      - mineru-network

  backend:
    image: lpdswing/mineru-web-backend:v2.6.2
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    environment:
      - REDIS_HOST=redis
      - MINIO_ENDPOINT=${MINIO_ENDPOINT:-minio:9000}
      - DATABASE_URL=sqlite:///./mineru.db
      # 按需配置
      - BACKEND=vllm-client  # 只能用client，uvicorn无法在子进程加载vlm模型
      # - MODEL_PATH=/models/vlm
      - SERVER_URL=http://mineru-vllm-server:30000
      # - MINERU_TABLE_MERGE_ENABLE=0  # 关闭表格合并
    volumes:
      - ./backend:/app
      - ./mineru.json:/root/mineru.json
      - ./models2.0:/models
    depends_on:
      redis:
        condition: service_healthy
      minio:
        condition: service_healthy
      mineru-vllm-server:
        condition: service_healthy
    networks:
      - mineru-network

  worker:
    image: lpdswing/mineru-web-backend:v2.6.2
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    command: python3 run_worker.py
    environment:
      - REDIS_HOST=redis
      - MINIO_ENDPOINT=${MINIO_ENDPOINT:-minio:9000}
      - DATABASE_URL=sqlite:///./mineru.db
      # 按需配置
      - SERVER_URL=http://mineru-vllm-server:30000  # sglang server服务地址
      # - MINERU_TABLE_MERGE_ENABLE=0  # 关闭表格合并
    volumes:
      - ./backend:/app
      - ./mineru.json:/root/mineru.json
      - ./models2.0:/models
    depends_on:
      redis:
        condition: service_healthy
      minio:
        condition: service_healthy
      mineru-vllm-server:
        condition: service_healthy
    networks:
      - mineru-network



  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - mineru-network

  minio:
    image: minio/minio:RELEASE.2024-12-18T13-15-44Z
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - mineru-network

volumes:
  minio_data:
  redis_data:

networks:
  mineru-network:
    driver: bridge
