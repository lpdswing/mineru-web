"""add indexes for performance

Revision ID: 4ef1cec9a436
Revises: d6c47750e1f7
Create Date: 2025-10-31 09:48:12.402015

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '4ef1cec9a436'
down_revision: Union[str, None] = 'd6c47750e1f7'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_index('idx_user_status', 'files', ['user_id', 'status'], unique=False)
    op.create_index(op.f('ix_files_filename'), 'files', ['filename'], unique=False)
    op.create_index(op.f('ix_files_status'), 'files', ['status'], unique=False)
    op.create_index(op.f('ix_files_upload_time'), 'files', ['upload_time'], unique=False)
    # SQLite 不支持 ALTER COLUMN TYPE，且在 SQLite 中 VARCHAR 和 Enum 都存储为文本
    # 因此跳过 backend 列类型修改，应用层会正确处理
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_files_upload_time'), table_name='files')
    op.drop_index(op.f('ix_files_status'), table_name='files')
    op.drop_index(op.f('ix_files_filename'), table_name='files')
    op.drop_index('idx_user_status', table_name='files')
    # SQLite: 跳过 backend 列类型回退
    # ### end Alembic commands ###
